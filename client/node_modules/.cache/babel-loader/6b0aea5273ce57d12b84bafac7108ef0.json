{"ast":null,"code":"import _toConsumableArray from \"G:\\\\HR_Skoli_2019\\\\Vefforritun\\\\socket.io\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"G:\\\\HR_Skoli_2019\\\\Vefforritun\\\\socket.io\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"G:\\\\HR_Skoli_2019\\\\Vefforritun\\\\socket.io\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\HR_Skoli_2019\\\\Vefforritun\\\\socket.io\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"G:\\\\HR_Skoli_2019\\\\Vefforritun\\\\socket.io\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"G:\\\\HR_Skoli_2019\\\\Vefforritun\\\\socket.io\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\HR_Skoli_2019\\\\Vefforritun\\\\socket.io\\\\client\\\\src\\\\components\\\\ChatWindow\\\\ChatWindow.js\";\nimport React from 'react';\nimport { socket } from '../../services/socketService';\n\nvar ChatWindow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatWindow, _React$Component);\n\n  _createClass(ChatWindow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(socket);\n      socket.on('message', function (message) {\n        var messages = _this2.state.messages;\n\n        _this2.setState({\n          messages: [].concat(_toConsumableArray(messages), [message])\n        });\n\n        _this2.setState({\n          Nick: ''\n        });\n      });\n    }\n  }]);\n\n  function ChatWindow(props) {\n    var _this;\n\n    _classCallCheck(this, ChatWindow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatWindow).call(this, props));\n    _this.state = {\n      messages: [],\n\n      /* List of all messages within the public lobby */\n      message: ''\n      /* Current message */\n\n    };\n    var nick = '';\n    return _this;\n  }\n\n  _createClass(ChatWindow, [{\n    key: \"sendMessage\",\n    value: function sendMessage(message) {\n      if (message === '') {\n        return false;\n      }\n\n      socket.emit('message', message);\n      this.setState({\n        message: ''\n      });\n    }\n  }, {\n    key: \"setNick\",\n    value: function setNick(nick) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var users = this.props.users;\n      var _this$state = this.state,\n          messages = _this$state.messages,\n          message = _this$state.message,\n          currNick = _this$state.currNick;\n      var nick = '';\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"nick-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: nick,\n        placeholder: \"Enter your nick here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.setNick(nick);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Enter chat!\"))), React.createElement(\"div\", {\n        className: \"chat-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(ChatWindow.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(ChatWindow.Messages, {\n        messages: messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(ChatWindow.Users, {\n        users: users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            message: e.target.value\n          });\n        },\n        placeholder: \"Enter your message here...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.sendMessage(message);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Send\"))));\n    }\n  }]);\n\n  return ChatWindow;\n}(React.Component);\n\n;\n\nChatWindow.Title = function () {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"first\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"C\"), React.createElement(\"span\", {\n    className: \"second\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"h\"), React.createElement(\"span\", {\n    className: \"third\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"a\"), React.createElement(\"span\", {\n    className: \"fourth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"t\"), React.createElement(\"span\", {\n    className: \"fifth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \".\"), React.createElement(\"span\", {\n    className: \"sixth\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"i\"), React.createElement(\"span\", {\n    className: \"seventh\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"o\"));\n};\n\nChatWindow.Messages = function (props) {\n  return React.createElement(\"div\", {\n    className: \"messages\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, props.messages.map(function (m) {\n    return React.createElement(\"div\", {\n      key: m,\n      className: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, m);\n  }));\n};\n\nChatWindow.Users = function (props) {\n  return React.createElement(\"div\", {\n    className: \"users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.users.map(function (u) {\n    return React.createElement(\"div\", {\n      key: u,\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, u);\n  }));\n};\n\nexport default ChatWindow;","map":{"version":3,"sources":["G:\\HR_Skoli_2019\\Vefforritun\\socket.io\\client\\src\\components\\ChatWindow\\ChatWindow.js"],"names":["React","socket","ChatWindow","console","log","on","message","messages","state","setState","Nick","props","nick","emit","users","currNick","setNick","e","target","value","sendMessage","Component","Title","Messages","map","m","Users","u"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { socket } from '../../services/socketService';\n\nclass ChatWindow extends React.Component {\n    componentDidMount() {\n        console.log(socket);\n        socket.on('message', message => {\n            const { messages } = this.state;\n            this.setState({ messages: [ ...messages, message ] });\n            this.setState({ Nick:'' })\n        });\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: [], /* List of all messages within the public lobby */\n            message: '' /* Current message */\n        };\n        const nick = '';\n    }\n    sendMessage(message) {\n        if (message === '') { return false; }\n        socket.emit('message', message);\n        this.setState({ message: '' });\n    }\n    setNick(nick) {\n\n    }\n    render() {\n        const { users } = this.props;\n        const { messages, message, currNick } = this.state;\n        const nick = '';\n        return (\n          <div className=\"container\">\n            <div className=\"nick-window\">\n              <div className=\"input-container\">\n                  <input type=\"text\" value={ nick } placeholder=\"Enter your nick here...\" />\n                  <button type=\"button\" onClick={() => this.setNick(nick)}>Enter chat!</button>\n              </div>\n            </div>\n              <div className=\"chat-window\">\n                  <ChatWindow.Title />\n                  <ChatWindow.Messages messages={ messages } />\n                  <ChatWindow.Users users={ users } />\n                  <div className=\"input-container\">\n                      <input type=\"text\" value={ message } onChange={e => this.setState({ message: e.target.value })} placeholder=\"Enter your message here...\" />\n                      <button type=\"button\" onClick={() => this.sendMessage(message)}>Send</button>\n                  </div>\n              </div>\n            </div>\n        );\n    }\n};\n\nChatWindow.Title = () => (\n    <h3>\n        <span className=\"first\">C</span>\n        <span className=\"second\">h</span>\n        <span className=\"third\">a</span>\n        <span className=\"fourth\">t</span>\n        <span className=\"fifth\">.</span>\n        <span className=\"sixth\">i</span>\n        <span className=\"seventh\">o</span>\n    </h3>\n);\n\nChatWindow.Messages = props => (\n    <div className=\"messages\">\n        { props.messages.map(m => <div key={ m } className=\"message\">{ m }</div>) }\n    </div>\n);\n\nChatWindow.Users = props => (\n    <div className=\"users\">\n        { props.users.map(u => <div key={ u } className=\"user\">{ u }</div>) }\n    </div>\n);\n\nexport default ChatWindow;\n"]},"metadata":{},"sourceType":"module"}